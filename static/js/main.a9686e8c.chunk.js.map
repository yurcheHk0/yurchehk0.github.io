{"version":3,"sources":["logo.svg","reducers/rootReducer.js","reducers/index.js","utils/config.js","utils/api.js","App.js","actions/simpleAction.js","components/Spinner/index.js","index.js","store.js"],"names":["module","exports","combineReducers","main","state","action","type","result","payload","config","client_id","server_url","account_url","createApiRequest","method","route","accessToken","login","axios","url","headers","Authorization","DateInterval","Agent","catch","error","console","api","fetchAgents","fetchAgentAvailability","fetchChattingTime","App","simpleAction","props","LiveChat","then","widget","log","this","response","data","err","className","onClick","JSON","stringify","href","target","rel","Component","connect","dispatch","marginTop","style","display","justifyItems","color","ReactDOM","render","store","createStore","rootReducer","applyMiddleware","thunk","useState","setAccessToken","init","authorize","useEffect","accountsSdk","onIdentityFetched","access_token","window","location","useLiveChat","Spinner","document","getElementById"],"mappings":"yJAAAA,EAAOC,QAAU,IAA0B,kC,+HCG5BC,cAAgB,CAC3BC,KCJW,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACnC,OAAQA,EAAOC,MACX,IAAK,gBACD,MAAO,CAAEC,OAAQF,EAAOG,SAC5B,QACI,OAAOJ,M,0DCEJK,G,MAPA,CACXC,UAAW,mCACXC,WACI,sEACJC,YAAa,sC,iBCATD,EAAeF,EAAfE,WAEFE,EAAmB,SAACC,EAAQC,EAAOC,EAAaC,GAClD,OAAOC,IAAM,CACTJ,SACAK,IAAKR,EAAaI,EAClBK,QAAS,CACLC,cAAe,UAAYL,EAC3BM,aAAc,EACd,gBAAiB,IACjBC,MAAON,KAEZO,OAAM,SAASC,GACdC,QAAQD,MAAMA,OAYPE,EARH,CACRC,YAAa,SAAAZ,GAAW,OAAIH,EAnBpB,MAmB0C,UAAWG,IAC7Da,uBAAwB,SAACZ,EAAOD,GAAR,OACpBH,EArBI,MAqBkB,gBAAiBG,EAAaC,IACxDa,kBAAmB,SAACb,EAAOD,GAAR,OACfH,EAvBI,MAuBkB,YAAaG,EAAaC,K,gBClBlDc,E,2MAaFC,aAAe,WACf,EAAKC,MAAMD,gB,mFAPPE,MAA+BC,MAAK,SAASC,GACzCV,QAAQW,IAAI,UACZX,QAAQW,IAAID,Q,+BAyBpB,OATAT,EAAIC,YAAYU,KAAKL,MAAMjB,aAEtBmB,MAAK,SAAAI,GACJb,QAAQW,IAAIE,EAASC,SAEtBhB,OAAO,SAAAiB,GACNf,QAAQW,IAAII,MAId,yBAAKC,UAAU,OACb,4BAAQA,UAAU,cAEhB,mCACO,4CADP,wBAGA,4BAAQC,QAASL,KAAKN,cAAtB,qBAEA,6BAEOY,KAAKC,UAAUP,KAAKL,QAI3B,uBACIS,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,uBAJR,qB,GAjDMC,aAuEHC,eARS,SAAA9C,GAAK,sBACxBA,MAGsB,SAAA+C,GAAQ,MAAK,CACtCnB,aAAc,kBAAMmB,GC5EY,SAAAA,GAC9BA,EAAS,CACL7C,KAAM,gBACNE,QAAS,mCD4EF0C,CAA6CnB,G,iBE5E7C,kBAAGqB,EAAH,EAAGA,UAAH,OACX,yBACIC,MAAO,CACHC,QAAS,OACTC,aAAc,SACdH,cAGJ,kBAAC,IAAD,CAAQ9C,KAAK,OAAOkD,MAAM,wB,sBCuClCC,IAASC,OAAO,kBAAC,IAAD,CAAUC,MC9CfC,YACHC,EACAC,YAAgBC,OD6CpB,mBAfgB,WAAO,IAAD,EAtBN,SAAC,GAAgC,IAA9BrD,EAA6B,EAA7BA,UAAWE,EAAkB,EAAlBA,YAAkB,EACVoD,mBAAS,MADC,mBACzChD,EADyC,KAC5BiD,EAD4B,KAmBhD,OAjBA/B,IAASgC,KAAK,CAAEC,WAAW,IAE3BC,qBAAU,WACNC,IAAYH,KAAK,CACbxD,YACA4D,kBAAmB,SAAC7C,EAAOe,GACnBA,GAAQA,EAAK+B,aACbN,EAAezB,EAAK+B,cAEpBC,OAAOC,SAAS3B,KAAhB,UAA0BlC,EAA1B,0CAAuEF,EAAvE,yBACI8D,OAAOC,SAAS3B,YAO7B,CAAC9B,GAIc0D,CAAYjE,GAA3BO,EADe,oBAGtB,OAAKA,EAKD,kBAAC,WAAD,KACI,kBAAC,EAAD,CAAKA,YAAaA,KALf,kBAAC2D,EAAD,CAASvB,UAAU,wBAW9B,OACSwB,SAASC,eAAe,W","file":"static/js/main.a9686e8c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { combineReducers } from 'redux';\nimport main from './index';\n\nexport default combineReducers({\n    main\n});\n","export default (state = {}, action) => {\n    switch (action.type) {\n        case 'SIMPLE_ACTION':\n            return { result: action.payload };\n        default:\n            return state\n    }\n}\n","const config = {\n    client_id: \"9ae38b3d1903fa6cd9915cab44ba1448\",\n    server_url:\n        \"https://us-central1-livechat-experiments.cloudfunctions.net/restApi\",\n    account_url: \"https://accounts.livechatinc.com/\"\n};\n\nexport default config;\n","import config from \"./config\";\nimport axios from \"axios\";\n\nconst GET = \"GET\";\nconst { server_url } = config;\n\nconst createApiRequest = (method, route, accessToken, login) => {\n    return axios({\n        method,\n        url: server_url + route,\n        headers: {\n            Authorization: \"Bearer \" + accessToken,\n            DateInterval: 1,\n            \"X-API-Version\": \"2\",\n            Agent: login\n        }\n    }).catch(function(error) {\n        console.error(error);\n    });\n};\n\nconst api = {\n    fetchAgents: accessToken => createApiRequest(GET, \"/agents\", accessToken),\n    fetchAgentAvailability: (login, accessToken) =>\n        createApiRequest(GET, \"/availability\", accessToken, login),\n    fetchChattingTime: (login, accessToken) =>\n        createApiRequest(GET, \"/chatting\", accessToken, login)\n};\n\nexport default api;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { simpleAction } from './actions/simpleAction';\nimport logo from './logo.svg';\nimport api from \"./utils/api\";\nimport './App.css';\nimport * as LiveChat from \"@livechat/agent-app-sdk\";\n\nclass App extends Component {\n\n  // constructor(props) {\n  //   super(props);\n  // }\n\n    componentDidMount() {\n        LiveChat.createDetailsWidget().then(function(widget) {\n            console.log('widget');\n            console.log(widget);\n        });\n    }\n\n    simpleAction = () => {\n    this.props.simpleAction();\n  };\n\n  // useEffect() {\n  //   console.log('useEffect!!!!!!!!');\n  //   console.log(this.props);\n  //   console.log(this.state);\n  //   api.fetchAgents(this.props.accessToken).then(response => console.log(response.data));\n  // }\n\n  render() {\n    api.fetchAgents(this.props.accessToken)\n    // api.startChat('94e2fd68-f0d9-4920-7839-3a4eefbd84cb', this.props.accessToken)\n        .then(response => {\n          console.log(response.data)\n        })\n        .catch( err => {\n          console.log(err)\n        });\n\n    return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            {/*<img src={logo} className=\"App-logo\" alt=\"logo\" />*/}\n            <p>\n              Edit <code>src/App.js</code> and save to reload.\n            </p>\n            <button onClick={this.simpleAction}>Test redux action</button>\n\n            <pre>\n                 {\n                   JSON.stringify(this.props)\n                 }\n            </pre>\n\n            <a\n                className=\"App-link\"\n                href=\"https://reactjs.org\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >\n              Learn React\n            </a>\n          </header>\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  ...state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  simpleAction: () => dispatch(simpleAction())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export const simpleAction = () => dispatch => {\n    dispatch({\n        type: 'SIMPLE_ACTION',\n        payload: 'result_of_simple_action'\n    })\n};\n","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\n\nexport default ({ marginTop }) => (\n    <div\n        style={{\n            display: \"grid\",\n            justifyItems: \"center\",\n            marginTop\n        }}\n    >\n        <Loader type=\"Oval\" color=\"rgb(67, 132, 245)\" />\n    </div>\n);\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport configureStore from './store';\nimport './index.css';\nimport App from './App';\n\nimport config from \"./utils/config\";\nimport Spinner from \"./components/Spinner/index\";\n\nimport { accountsSdk } from \"@livechat/accounts-sdk\";\nimport LiveChat from \"@livechat/agent-app-widget-sdk\";\nimport \"@livechat/design-system/dist/design-system.css\";\n\nconst useLiveChat = ({ client_id, account_url }) => {\n    const [accessToken, setAccessToken] = useState(null);\n    LiveChat.init({ authorize: false });\n\n    useEffect(() => {\n        accountsSdk.init({\n            client_id,\n            onIdentityFetched: (error, data) => {\n                if (data && data.access_token) {\n                    setAccessToken(data.access_token);\n                } else {\n                    window.location.href = `${account_url}?response_type=token&client_id=${client_id}&redirect_uri=${\n                        window.location.href\n                    }`;\n                }\n            }\n        });\n    });\n\n    return [accessToken];\n};\n\nconst AppWithAuth = () => {\n    const [accessToken] = useLiveChat(config);\n\n    if (!accessToken) {\n        return <Spinner marginTop=\"calc(100% - 50px)\" />;\n    }\n\n    return (\n        <Fragment>\n            <App accessToken={accessToken} />\n        </Fragment>\n    );\n};\n\nReactDOM.render(<Provider store={configureStore()}>\n    <AppWithAuth />\n</Provider>, document.getElementById('root'));\n\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\nexport default function configureStore() {\n    return createStore(\n        rootReducer,\n        applyMiddleware(thunk)\n    );\n}\n"],"sourceRoot":""}